diff -Naur cmus-2.7.1.orig/ffmpeg.c cmus-2.7.1/ffmpeg.c
--- cmus-2.7.1.orig/ffmpeg.c  2015-07-13 13:00:56.000000000 +0300
+++ cmus-2.7.1/ffmpeg.c	      2016-06-15 23:25:03.081612000 +0300
@@ -39,7 +39,11 @@
 #include <libavformat/avio.h>
 #include <libswresample/swresample.h>
 #include <libavutil/opt.h>
+#if LIBAVUTIL_VERSION_MAJOR >= 53
+#include <libavutil/channel_layout.h>
+#else
 #include <libavutil/audioconvert.h>
+#endif
 #ifndef AVUTIL_MATHEMATICS_H
 #include <libavutil/mathematics.h>
 #endif
@@ -115,7 +119,11 @@
 
 static void ffmpeg_input_free(struct ffmpeg_input *input)
 {
+#if LIBAVCODEC_VERSION_MAJOR >= 56
+	av_packet_unref(&input->pkt);
+#else
 	av_free_packet(&input->pkt);
+#endif
 	free(input);
 }
 
@@ -235,7 +243,11 @@
 
 		codec = avcodec_find_decoder(cc->codec_id);
 		if (!codec) {
+#if LIBAVCODEC_VERSION_MAJOR >= 54
+			d_print("codec not found: %d, %s\n", cc->codec_id, avcodec_get_name(cc->codec_id));
+#else
 			d_print("codec not found: %d, %s\n", cc->codec_id, cc->codec_name);
+#endif
 			err = -IP_ERROR_UNSUPPORTED_FILE_TYPE;
 			break;
 		}
@@ -248,7 +260,11 @@
 #else
 		if (avcodec_open2(cc, codec, NULL) < 0) {
 #endif
+#if LIBAVCODEC_VERSION_MAJOR >= 54
+			d_print("could not open codec: %d, %s\n", cc->codec_id, avcodec_get_name(cc->codec_id));
+#else
 			d_print("could not open codec: %d, %s\n", cc->codec_id, cc->codec_name);
+#endif
 			err = -IP_ERROR_UNSUPPORTED_FILE_TYPE;
 			break;
 		}
@@ -347,7 +363,11 @@
 			      struct ffmpeg_output *output, SwrContext *swr)
 {
 #if (LIBAVCODEC_VERSION_INT >= ((53<<16) + (25<<8) + 0))
+#if LIBAVCODEC_VERSION_MAJOR >= 56
+	AVFrame *frame = av_frame_alloc();
+#else
 	AVFrame *frame = avcodec_alloc_frame();
+#endif
 	int got_frame;
 #endif
 	while (1) {
@@ -359,10 +379,16 @@
 		int len;
 
 		if (input->curr_pkt_size <= 0) {
+#if LIBAVCODEC_VERSION_MAJOR >= 56
+			av_packet_unref(&input->pkt);
+#else
 			av_free_packet(&input->pkt);
+#endif
 			if (av_read_frame(ic, &input->pkt) < 0) {
 				/* Force EOF once we can read no longer. */
-#if (LIBAVCODEC_VERSION_INT >= ((53<<16) + (25<<8) + 0))
+#if LIBAVCODEC_VERSION_MAJOR >= 56
+				av_frame_free(&frame);
+#elif (LIBAVCODEC_VERSION_INT >= ((53<<16) + (25<<8) + 0))
 				avcodec_free_frame(&frame);
 #endif
 				return 0;
@@ -399,7 +425,11 @@
 			av_new_packet(&avpkt, input->curr_pkt_size);
 			memcpy(avpkt.data, input->curr_pkt_buf, input->curr_pkt_size);
 			len = avcodec_decode_audio4(cc, frame, &got_frame, &avpkt);
+#if LIBAVCODEC_VERSION_MAJOR >= 56
+			av_packet_unref(&avpkt);
+#else
 			av_free_packet(&avpkt);
+#endif
 		}
 #endif
 		if (len < 0) {
@@ -426,7 +456,11 @@
 				res = 0;
 			output->buffer_pos = output->buffer;
 			output->buffer_used_len = res * cc->channels * sizeof(int16_t);
+#if LIBAVCODEC_VERSION_MAJOR >= 56
+			av_frame_free(&frame);
+#else
 			avcodec_free_frame(&frame);
+#endif
 			return output->buffer_used_len;
 		}
 #endif
@@ -505,6 +539,16 @@
 }
 #endif
 
+static void ffmpeg_read_metadata(struct growing_keyvals *c, AVDictionary *metadata)
+{
+	AVDictionaryEntry *tag = NULL;
+
+	while ((tag = av_dict_get(metadata, "", tag, AV_DICT_IGNORE_SUFFIX))) {
+		if (tag->value[0])
+			comments_add_const(c, tag->key, tag->value);
+	}
+}
+
 static int ffmpeg_read_comments(struct input_plugin_data *ip_data, struct keyval **comments)
 {
 	struct ffmpeg_private *priv = ip_data->private;
@@ -532,11 +576,10 @@
 	}
 #else
 	GROWING_KEYVALS(c);
-	AVDictionaryEntry *tag = NULL;
 
-	while ((tag = av_dict_get(ic->metadata, "", tag, AV_DICT_IGNORE_SUFFIX))) {
-		if (tag && tag->value[0])
-			comments_add_const(&c, tag->key, tag->value);
+	ffmpeg_read_metadata(&c, ic->metadata);
+	for (unsigned i = 0; i < ic->nb_streams; i++) {
+		ffmpeg_read_metadata(&c, ic->streams[i]->metadata);
 	}
 
 	keyvals_terminate(&c);
@@ -566,7 +609,11 @@
 	long bitrate = -1;
 #if (LIBAVFORMAT_VERSION_INT > ((51<<16)+(43<<8)+0))
 	/* ape codec returns silly numbers */
+#if LIBAVCODEC_VERSION_MAJOR >= 55
+	if (priv->codec->id == AV_CODEC_ID_APE)
+#else
 	if (priv->codec->id == CODEC_ID_APE)
+#endif
 		return -1;
 #endif
 	if (priv->input->curr_duration > 0) {
@@ -628,10 +675,9 @@
 
 const int ip_priority = 30;
 const char *const ip_extensions[] = {
-	"ac3", "aif", "aifc", "aiff", "ape", "au", "mka", "shn", "tta", "wma",
-	/* also supported by other plugins */
-	"aac", "fla", "flac", "m4a", "m4b", "mp+", "mp2", "mp3", "mp4", "mpc",
-	"mpp", "ogg", "wav", "wv",
+	"aa", "aac", "ac3", "aif", "aifc", "aiff", "ape", "au", "fla", "flac",
+	"m4a", "m4b", "mka", "mkv", "mp+", "mp2", "mp3", "mp4", "mpc", "mpp",
+	"ogg", "shn", "tak", "tta", "wav", "webm", "wma", "wv",
 #ifdef USE_FALLBACK_IP
 	"*",
 #endif

